<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <property name="logs.dir" value="./logs" />
    <property name="logname" value="logdemo" />
    <property name="ext" value="log" />
    <!-- Supported extensions .gz or .zip. -->
    <property name="compress-ext" value="zip" />
    <property name="archive.dir" value="archive" />

    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="software.daveturner.logdemo.MaskingPatternLayout">
                <maskPattern>(\w+@\w+\.\w+)</maskPattern> <!-- Email pattern, finds the patter and masks it -->
                <maskPattern>\"ssn\"\s*:\s*\"(.*?)\"</maskPattern> <!-- finds the SSN field name and then masks the value -->
                <Pattern>
                    %d{ISO8601} %highlight(%-5level) [%blue(%t)] %yellow(%C{1}): %msg%n%throwable
                </Pattern>
            </layout>
        </encoder>
    </appender>

    <appender name="RollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logs.dir}/${logname}.${ext}</file>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
           <!-- <Pattern>%d %p %C{1} [%t] %m%n</Pattern> -->
            <layout class="software.daveturner.logdemo.MaskingPatternLayout">
                <maskPattern>(\w+@\w+\.\w+)</maskPattern> <!-- Email pattern, finds the patter and masks it -->
                <maskPattern>\"ssn\"\s*:\s*\"(.*?)\"</maskPattern> <!-- finds the SSN field name and then masks the value -->
                <Pattern>%d %p %C{1} [%t] %m%n</Pattern>
            </layout>
        </encoder>
        <rollingPolicy
            class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily, add an increment and when the file reaches 5 KiloBytes -->
            <fileNamePattern>${logs.dir}/${archive.dir}/${logname}-%d{yyyy-MM-dd}.%i.${ext}.${compress-ext}
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- each file may be at most 5kb -->
                <maxFileSize>500MB</maxFileSize>
                <!-- keep 30 days worth of history -->
                <maxHistory>30</maxHistory>
                <!-- but at most 100MB worth of logs -->
                <totalSizeCap>1GB</totalSizeCap>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="json" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logs.dir}/${logname}-json.${ext}</file>
        <encoder class="ch.qos.logback.classic.encoder.JsonEncoder"/>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily, add an increment and when the file reaches 5 KiloBytes -->
            <fileNamePattern>${logs.dir}/${archive.dir}/${logname}-json-%d{yyyy-MM-dd}.%i.${ext}.${compress-ext}
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- each file may be at most 5kb -->
                <maxFileSize>500MB</maxFileSize>
                <!-- keep 30 days worth of history -->
                <maxHistory>30</maxHistory>
                <!-- but at most 100MB worth of logs -->
                <totalSizeCap>1GB</totalSizeCap>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="logstash" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logs.dir}/${logname}-logstash.${ext}</file>
        <!--<encoder class="net.logstash.logback.encoder.LogstashEncoder"/> -->

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>
                    <pattern>
                        {
                        "@timestamp": "%date{yyyy-MM-dd'T'HH:mm:ss.SSSZZ}",
                        "msg": "%msg",
                        "log_type": "%level"
                        }
                    </pattern>
                    <omitEmptyFields>true</omitEmptyFields>
                </pattern>
            </providers>
            <logLevel>
                INFO
            </logLevel>
            <jsonGeneratorDecorator class="net.logstash.logback.mask.MaskingJsonGeneratorDecorator">
                <valueMasker class="software.daveturner.logdemo.CustomValueMasker"/>
            </jsonGeneratorDecorator>
            <timestampPattern>yyyy-MM-dd'T'HH:mm:ss.SSS</timestampPattern>
        </encoder>
        -->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily, add an increment and when the file reaches 5 KiloBytes -->
            <fileNamePattern>${logs.dir}/${archive.dir}/${logname}-logstash-%d{yyyy-MM-dd}.%i.${ext}.${compress-ext}
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- each file may be at most 5kb -->
                <maxFileSize>500MB</maxFileSize>
                <!-- keep 30 days worth of history -->
                <maxHistory>30</maxHistory>
                <!-- but at most 100MB worth of logs -->
                <totalSizeCap>1GB</totalSizeCap>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <logger name="software.daveturner" level="debug" additivity="false">
        <appender-ref ref="RollingFile" />
        <appender-ref ref="Console" />
        <appender-ref ref="json" />
        <appender-ref ref="logstash" />
    </logger>

</configuration>
